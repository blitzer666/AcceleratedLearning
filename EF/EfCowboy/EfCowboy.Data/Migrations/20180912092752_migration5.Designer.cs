// <auto-generated />
using EfCowboy.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EfCowboy.Data.Migrations
{
    [DbContext(typeof(CowboyContext))]
    [Migration("20180912092752_migration5")]
    partial class migration5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EfCowboy.Domain.Cowboy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Charm");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Cowboys");
                });

            modelBuilder.Entity("EfCowboy.Domain.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CowboyId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("CowboyId");

                    b.ToTable("Quote");
                });

            modelBuilder.Entity("EfCowboy.Domain.SecretIdentity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CowboyId");

                    b.Property<string>("RealName");

                    b.HasKey("Id");

                    b.HasIndex("CowboyId")
                        .IsUnique();

                    b.ToTable("SecretIdentity");
                });

            modelBuilder.Entity("EfCowboy.Domain.Quote", b =>
                {
                    b.HasOne("EfCowboy.Domain.Cowboy", "Cowboy")
                        .WithMany("Quotes")
                        .HasForeignKey("CowboyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EfCowboy.Domain.SecretIdentity", b =>
                {
                    b.HasOne("EfCowboy.Domain.Cowboy", "Cowboy")
                        .WithOne("SecretIdentity")
                        .HasForeignKey("EfCowboy.Domain.SecretIdentity", "CowboyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
